{{- $configMapName := printf "%s-%s" (include "cdogs.configname" .) "config" }}
{{- $configMap := (lookup "v1" "ConfigMap" .Release.Namespace $configMapName ) }}
{{- $awsSecretName := printf "%s-%s" (include "cdogs.configname" .) "aws" }}
{{- $awsSecret := (lookup "v1" "Secret" .Release.Namespace $awsSecretName ) }}
{{- $kcSecretName := printf "%s-%s" (include "cdogs.configname" .) "keycloak" }}
{{- $kcSecret := (lookup "v1" "Secret" .Release.Namespace $kcSecretName ) }}
Get the application URL by running these commands:
{{- if .Values.route.enabled }}
  http{{ if $.Values.route.tls }}s{{ end }}://{{ .Values.route.host }}{{ .Values.route.path }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "cdogs.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "cdogs.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "cdogs.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "cdogs.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}
{{- if not $configMap }}

Make sure that ConfigMap "{{ $configMapName }}" is defined in the namespace; the deployment will fail to run without it!
{{- end }}
{{- if and (not $awsSecret) (.Values.fluentBit.enabled) }}

Make sure that Secret "{{ $awsSecretName }}" is defined in the namespace; the deployment will fail to run without it!
{{- end }}
{{- if and (not $kcSecret) (.Values.config.configMap.KC_ENABLED) }}

Make sure that Secret "{{ $kcSecretName }}" is defined in the namespace; the deployment will fail to run without it!
{{- end }}
